plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.supershiny'
version = '1.0.0'
archivesBaseName = 'SuperShiny'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

minecraft {
    mappings channel: 'official', version: '1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods {
                supershiny {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods {
                supershiny {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/main/resources' }

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs' // Para cargar Pixelmon.jar localmente
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'

    // SnakeYAML para leer config.yml
    implementation 'org.yaml:snakeyaml:1.33'

    // Pixelmon JAR local, aseg√∫rate de colocar el jar correcto en /libs
    implementation name: 'Pixelmon-1.16.5-9.1.7-universal' // cambia el nombre si tu JAR tiene otro
}

jar {
    manifest {
        attributes([
            "Specification-Title": "SuperShiny",
            "Specification-Vendor": "PlatanoV3rde",
            "Specification-Version": "1",
            "Implementation-Title": "SuperShiny",
            "Implementation-Version": version,
            "Implementation-Vendor": "PlatanoV3rde",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(11)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url = "file://${project.projectDir}/repo"
        }
    }
}
